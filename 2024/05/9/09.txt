파이썬으로 할 수 없는 일

    1. 시스템과 밀접한 프로그래밍 영역
        (매우 빠른 속도를 요구하거나 하드웨어를 직접 건드려야 하는 프로그램에는 적합하지 않다)
            -> 파이썬 내에 내장되어있는 각종 라이브러리들이 많기 때문에!
            -> 활용할 수 있는 라이브러리들이 많은 만큼, C나 C++에 비해 속도가 느림!

    2. 모바일 프로그래밍
        (파이썬으로는 앱을 개발 할 수 없음)





------------------------------------------------------------------------------------

파이썬 프로그램 설치 시, 유의할 점

1. 설치파일 실행 후 파이썬이 어느 곳에서든지 실행될 수 있도록 [Add python.exe to PATH] 옵션을 반드시 선택
2. 설치가 완료되면, 터미널의 켜서 "" 안에 있는 명령어를 입력하면 python의 버전 정보를 알 수 있다.
    "python3 -V"

------------------------------------------------------------------------------------

파이썬 특징

1. 대화형 인터프리터 = 파이썬 셸(python shell)
       -> 인터프리터 : 사용자가 입력한 소스 코드를 실행하는 환경
       -> python terminal창에 python3 -v 를 치면, 대화형 인터프리터 이용 가능

2. 터미널에서 프롬프트(>>>)가 있는 곳이 입력하는 부분.

3. quit()이나 exit()를 사용하여 대화형 인터프리터 종료 가능

4. 단어를 지정 할때는 반드시 "" or ''을 이용해서 표기해 주어야 한다!

5. 인터프리터 창에서 프롬프트(>>>) 자리에 대신 나타나는 ‘…’은 아직 입력 중인 문장이 끝나지 않았다는 것을 의미

6. 클론(:) 다음에는 반드시 탭(띄어쓰기)이 와야함!

7.  i= 0
>>> while i < 5:
...     i = i+1
...     print(i)
위의 내용에서 i = 0 을 나타내는 i 와, i = i+1 을 나타내는 i는 다르다.

8. def는 파이썬에서 함수를 정의할 때 사용하는 예약어

9. 파이썬 셸은 print문이 없어도 해당 값을 확인할 수 있지만, IDLE 에디터의 경우 반드시 print문을 사용해야한다.

10. 터미널에 which python3을 입력하면 가상환경의 경로 확인 및 가상환경을 적용 여부를 확인 할 수 있다.

11. 터미널에서 venv(가상환경)을 적용시키는 명령어는
    -> python3 -m venv venv (첫번째 venv는 파이썬의 모듈이름 두번째 venv는 파일이름 또는 가상환경 이름)

12. 컴퓨터에서 2진수와 8진수 16진수를 사용하는 이유!
    2진수 : 0과 1로 이루어진 숫자 체계이며, 컴퓨터에서 가장 기본적으로 사용(모든 데이터는 이진수로 표현)
     -> 컴퓨터의 기본단위인 비트를 표현 할때 사용되며 간결성 및 명확성을 가지고 있음

    8진수 : 0부터 7까지의 숫자로 이루어진 숫자 체계. 각 자리는 2진수 3자리로 대응
        ex) 8진수의 "52"는 이진수로 변환하면 "101010"
     ->

    16진수 : 0부터 9까지의 숫자와 A부터 F까지의 문자로 이루어진 숫자 체계 / 2진수를 보다 간결하게 표현가능
     -> 메모리 주소를 표현하며 관리하는데 효과적

13. 문자열을 변수에 저장하고 싶다면,  "" or '' 를 양쪽에 동일하게 적용 해주면 됨
     -> 만약 문자열 내에 ' or "가 하나라도 포함되어 있다면, 동일하지 않은 따옴표로 감싸주어야한다.

14. 역슬래시를 작은따옴표나 큰따옴표 앞에 삽입하면
        역슬래시 뒤의 작은따옴표나 큰따옴표는 문자열을 둘러싸는 기호의 의미가 아니라 '나 " 자체를 뜻함

15. 변수에 저장하고 싶은 문자열의 줄바꿈을 하고싶다면, 문장 사이에 \n을 추가 기입하면 됨
      그것보다는 문자열 끝과 끝에 따옴표 세개씩을 기입하면 자유롭게 줄바꿈을 할수 있다.
